Terminals unused in grammar

   OSB
   CSB
   POW
   INC
   DEC


Grammar

    0 $accept: problem $end

    1 problem: header
    2        | s

    3 header: h s

    4 h: IMPORT W LIBRARY OB QUO MATH QUO CB
    5  | IMPORT W LIBRARY OB MATH CB

    6 s: print s
    7  | paste s
    8  | if s
    9  | func s
   10  | assignexp1 s
   11  | assignexp2 s
   12  | break s
   13  | %empty

   14 print: PRINT OB printvalue CB
   15      | PRINT OB QUO printvalue QUO CB

   16 printvalue: r
   17           | range

   18 range: NUM CLN NUM
   19      | vector
   20      | seq

   21 seq: SEQ OB NUM COMMA NUM extraopt CB

   22 extraopt: extra
   23         | %empty

   24 extra: COMMA BY A1 NUM
   25      | COMMA LEN '.' OUT A1 NUM

   26 paste: PASTE OB lisvar CB
   27      | PASTE OB QUO lisvar QUO CB

   28 break: BRE

   29 r: STR
   30  | BOOL
   31  | q

   32 if: IF OB exp CB OCB s CCB c

   33 c: ELSE W IF OB exp CB OCB s CCB c
   34  | ELSE OCB s CCB
   35  | %empty

   36 func: IFELSE OB exp COMMA r COMMA r CB
   37     | IFELSE OB exp COMMA QUO r QUO COMMA QUO r QUO CB

   38 exp: r calc exp
   39    | NOT exp
   40    | r

   41 q: ID
   42  | NUM

   43 calc: relop
   44     | logop
   45     | arithop

   46 E: E PLUS T
   47  | E MINUS T
   48  | T

   49 T: T MUL F
   50  | T DIV F
   51  | F

   52 F: r
   53  | OB E CB

   54 arithop: PLUS
   55        | MINUS
   56        | PERC
   57        | DIV
   58        | MUL

   59 relop: LT
   60      | GT
   61      | COM
   62      | LE
   63      | GE
   64      | NE

   65 logop: l OR logop
   66      | l

   67 l: n AND l
   68  | n

   69 n: NOT o
   70  | o

   71 o: OB exp CB
   72  | r

   73 assignexp1: ID A1 i
   74           | ID A2 i
   75           | ID A3 i

   76 li: LIST OB lisvar CB

   77 i: E
   78  | li
   79  | vector

   80 lisvar: r COMMA lisvar
   81       | r

   82 vector: C OB lisvar CB

   83 assignexp2: i A4 ID
   84           | i A5 ID


Terminals, with rules where they appear

$end (0) 0
'.' (46) 25
error (256)
IMPORT (258) 4 5
LIBRARY (259) 4 5
MATH (260) 4 5
PRINT (261) 14 15
PASTE (262) 26 27
BRE (263) 28
ELSE (264) 33 34
IF (265) 32 33
IFELSE (266) 36 37
QUO (267) 4 15 27 37
W (268) 4 5 33
COMMA (269) 21 24 25 36 37 80
A1 (270) 24 25 73
A2 (271) 74
A3 (272) 75
A4 (273) 83
A5 (274) 84
OB (275) 4 5 14 15 21 26 27 32 33 36 37 53 71 76 82
CB (276) 4 5 14 15 21 26 27 32 33 36 37 53 71 76 82
OCB (277) 32 33 34
CCB (278) 32 33 34
OSB (279)
CSB (280)
CLN (281) 18
PLUS (282) 46 54
MINUS (283) 47 55
DIV (284) 50 57
MUL (285) 49 58
POW (286)
LE (287) 62
GE (288) 63
COM (289) 61
NE (290) 64
LT (291) 59
GT (292) 60
AND (293) 67
OR (294) 65
NOT (295) 39 69
PERC (296) 56
BOOL (297) 30
INC (298)
DEC (299)
LIST (300) 76
SEQ (301) 21
BY (302) 24
LEN (303) 25
OUT (304) 25
C (305) 82
NUM <tree> (306) 18 21 24 25 42
STR <tree> (307) 29
ID <tree> (308) 41 73 74 75 83 84


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
problem (56)
    on left: 1 2, on right: 0
header (57)
    on left: 3, on right: 1
h (58)
    on left: 4 5, on right: 3
s (59)
    on left: 6 7 8 9 10 11 12 13, on right: 2 3 6 7 8 9 10 11 12 32
    33 34
print (60)
    on left: 14 15, on right: 6
printvalue (61)
    on left: 16 17, on right: 14 15
range (62)
    on left: 18 19 20, on right: 17
seq (63)
    on left: 21, on right: 20
extraopt (64)
    on left: 22 23, on right: 21
extra (65)
    on left: 24 25, on right: 22
paste (66)
    on left: 26 27, on right: 7
break (67)
    on left: 28, on right: 12
r <tree> (68)
    on left: 29 30 31, on right: 16 36 37 38 40 52 72 80 81
if <tree> (69)
    on left: 32, on right: 8
c (70)
    on left: 33 34 35, on right: 32 33
func (71)
    on left: 36 37, on right: 9
exp <tree> (72)
    on left: 38 39 40, on right: 32 33 36 37 38 39 71
q <tree> (73)
    on left: 41 42, on right: 31
calc <tree> (74)
    on left: 43 44 45, on right: 38
E <tree> (75)
    on left: 46 47 48, on right: 46 47 53 77
T <tree> (76)
    on left: 49 50 51, on right: 46 47 48 49 50
F <tree> (77)
    on left: 52 53, on right: 49 50 51
arithop <tree> (78)
    on left: 54 55 56 57 58, on right: 45
relop <tree> (79)
    on left: 59 60 61 62 63 64, on right: 43
logop (80)
    on left: 65 66, on right: 44 65
l (81)
    on left: 67 68, on right: 65 66 67
n (82)
    on left: 69 70, on right: 67 68
o (83)
    on left: 71 72, on right: 69 70
assignexp1 <tree> (84)
    on left: 73 74 75, on right: 10
li (85)
    on left: 76, on right: 78
i <tree> (86)
    on left: 77 78 79, on right: 73 74 75 83 84
lisvar (87)
    on left: 80 81, on right: 26 27 76 80 82
vector (88)
    on left: 82, on right: 19 79
assignexp2 (89)
    on left: 83 84, on right: 11


State 0

    0 $accept: . problem $end

    IMPORT  shift, and go to state 1
    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    problem     go to state 14
    header      go to state 15
    h           go to state 16
    s           go to state 17
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 1

    4 h: IMPORT . W LIBRARY OB QUO MATH QUO CB
    5  | IMPORT . W LIBRARY OB MATH CB

    W  shift, and go to state 33


State 2

   14 print: PRINT . OB printvalue CB
   15      | PRINT . OB QUO printvalue QUO CB

    OB  shift, and go to state 34


State 3

   26 paste: PASTE . OB lisvar CB
   27      | PASTE . OB QUO lisvar QUO CB

    OB  shift, and go to state 35


State 4

   28 break: BRE .

    $default  reduce using rule 28 (break)


State 5

   32 if: IF . OB exp CB OCB s CCB c

    OB  shift, and go to state 36


State 6

   36 func: IFELSE . OB exp COMMA r COMMA r CB
   37     | IFELSE . OB exp COMMA QUO r QUO COMMA QUO r QUO CB

    OB  shift, and go to state 37


State 7

   53 F: OB . E CB

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 21
    q  go to state 24
    E  go to state 39
    T  go to state 26
    F  go to state 27


State 8

   30 r: BOOL .

    $default  reduce using rule 30 (r)


State 9

   76 li: LIST . OB lisvar CB

    OB  shift, and go to state 40


State 10

   82 vector: C . OB lisvar CB

    OB  shift, and go to state 41


State 11

   42 q: NUM .

    $default  reduce using rule 42 (q)


State 12

   29 r: STR .

    $default  reduce using rule 29 (r)


State 13

   41 q: ID .
   73 assignexp1: ID . A1 i
   74           | ID . A2 i
   75           | ID . A3 i

    A1  shift, and go to state 42
    A2  shift, and go to state 43
    A3  shift, and go to state 44

    $default  reduce using rule 41 (q)


State 14

    0 $accept: problem . $end

    $end  shift, and go to state 45


State 15

    1 problem: header .

    $default  reduce using rule 1 (problem)


State 16

    3 header: h . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 46
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 17

    2 problem: s .

    $default  reduce using rule 2 (problem)


State 18

    6 s: print . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 47
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 19

    7 s: paste . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 48
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 20

   12 s: break . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 49
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 21

   52 F: r .

    $default  reduce using rule 52 (F)


State 22

    8 s: if . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 50
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 23

    9 s: func . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 51
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 24

   31 r: q .

    $default  reduce using rule 31 (r)


State 25

   46 E: E . PLUS T
   47  | E . MINUS T
   77 i: E .

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53

    $default  reduce using rule 77 (i)


State 26

   48 E: T .
   49 T: T . MUL F
   50  | T . DIV F

    DIV  shift, and go to state 54
    MUL  shift, and go to state 55

    $default  reduce using rule 48 (E)


State 27

   51 T: F .

    $default  reduce using rule 51 (T)


State 28

   10 s: assignexp1 . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 56
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 29

   78 i: li .

    $default  reduce using rule 78 (i)


State 30

   83 assignexp2: i . A4 ID
   84           | i . A5 ID

    A4  shift, and go to state 57
    A5  shift, and go to state 58


State 31

   79 i: vector .

    $default  reduce using rule 79 (i)


State 32

   11 s: assignexp2 . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 59
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 33

    4 h: IMPORT W . LIBRARY OB QUO MATH QUO CB
    5  | IMPORT W . LIBRARY OB MATH CB

    LIBRARY  shift, and go to state 60


State 34

   14 print: PRINT OB . printvalue CB
   15      | PRINT OB . QUO printvalue QUO CB

    QUO   shift, and go to state 61
    BOOL  shift, and go to state 8
    SEQ   shift, and go to state 62
    C     shift, and go to state 10
    NUM   shift, and go to state 63
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    printvalue  go to state 64
    range       go to state 65
    seq         go to state 66
    r           go to state 67
    q           go to state 24
    vector      go to state 68


State 35

   26 paste: PASTE OB . lisvar CB
   27      | PASTE OB . QUO lisvar QUO CB

    QUO   shift, and go to state 69
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 70
    q       go to state 24
    lisvar  go to state 71


State 36

   32 if: IF OB . exp CB OCB s CCB c

    NOT   shift, and go to state 72
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r    go to state 73
    exp  go to state 74
    q    go to state 24


State 37

   36 func: IFELSE OB . exp COMMA r COMMA r CB
   37     | IFELSE OB . exp COMMA QUO r QUO COMMA QUO r QUO CB

    NOT   shift, and go to state 72
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r    go to state 73
    exp  go to state 75
    q    go to state 24


State 38

   41 q: ID .

    $default  reduce using rule 41 (q)


State 39

   46 E: E . PLUS T
   47  | E . MINUS T
   53 F: OB E . CB

    CB     shift, and go to state 76
    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53


State 40

   76 li: LIST OB . lisvar CB

    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 70
    q       go to state 24
    lisvar  go to state 77


State 41

   82 vector: C OB . lisvar CB

    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 70
    q       go to state 24
    lisvar  go to state 78


State 42

   73 assignexp1: ID A1 . i

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    LIST  shift, and go to state 9
    C     shift, and go to state 10
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 21
    q       go to state 24
    E       go to state 25
    T       go to state 26
    F       go to state 27
    li      go to state 29
    i       go to state 79
    vector  go to state 31


State 43

   74 assignexp1: ID A2 . i

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    LIST  shift, and go to state 9
    C     shift, and go to state 10
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 21
    q       go to state 24
    E       go to state 25
    T       go to state 26
    F       go to state 27
    li      go to state 29
    i       go to state 80
    vector  go to state 31


State 44

   75 assignexp1: ID A3 . i

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    LIST  shift, and go to state 9
    C     shift, and go to state 10
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 21
    q       go to state 24
    E       go to state 25
    T       go to state 26
    F       go to state 27
    li      go to state 29
    i       go to state 81
    vector  go to state 31


State 45

    0 $accept: problem $end .

    $default  accept


State 46

    3 header: h s .

    $default  reduce using rule 3 (header)


State 47

    6 s: print s .

    $default  reduce using rule 6 (s)


State 48

    7 s: paste s .

    $default  reduce using rule 7 (s)


State 49

   12 s: break s .

    $default  reduce using rule 12 (s)


State 50

    8 s: if s .

    $default  reduce using rule 8 (s)


State 51

    9 s: func s .

    $default  reduce using rule 9 (s)


State 52

   46 E: E PLUS . T

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 21
    q  go to state 24
    T  go to state 82
    F  go to state 27


State 53

   47 E: E MINUS . T

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 21
    q  go to state 24
    T  go to state 83
    F  go to state 27


State 54

   50 T: T DIV . F

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 21
    q  go to state 24
    F  go to state 84


State 55

   49 T: T MUL . F

    OB    shift, and go to state 7
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 21
    q  go to state 24
    F  go to state 85


State 56

   10 s: assignexp1 s .

    $default  reduce using rule 10 (s)


State 57

   83 assignexp2: i A4 . ID

    ID  shift, and go to state 86


State 58

   84 assignexp2: i A5 . ID

    ID  shift, and go to state 87


State 59

   11 s: assignexp2 s .

    $default  reduce using rule 11 (s)


State 60

    4 h: IMPORT W LIBRARY . OB QUO MATH QUO CB
    5  | IMPORT W LIBRARY . OB MATH CB

    OB  shift, and go to state 88


State 61

   15 print: PRINT OB QUO . printvalue QUO CB

    BOOL  shift, and go to state 8
    SEQ   shift, and go to state 62
    C     shift, and go to state 10
    NUM   shift, and go to state 63
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    printvalue  go to state 89
    range       go to state 65
    seq         go to state 66
    r           go to state 67
    q           go to state 24
    vector      go to state 68


State 62

   21 seq: SEQ . OB NUM COMMA NUM extraopt CB

    OB  shift, and go to state 90


State 63

   18 range: NUM . CLN NUM
   42 q: NUM .

    CLN  shift, and go to state 91

    $default  reduce using rule 42 (q)


State 64

   14 print: PRINT OB printvalue . CB

    CB  shift, and go to state 92


State 65

   17 printvalue: range .

    $default  reduce using rule 17 (printvalue)


State 66

   20 range: seq .

    $default  reduce using rule 20 (range)


State 67

   16 printvalue: r .

    $default  reduce using rule 16 (printvalue)


State 68

   19 range: vector .

    $default  reduce using rule 19 (range)


State 69

   27 paste: PASTE OB QUO . lisvar QUO CB

    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 70
    q       go to state 24
    lisvar  go to state 93


State 70

   80 lisvar: r . COMMA lisvar
   81       | r .

    COMMA  shift, and go to state 94

    $default  reduce using rule 81 (lisvar)


State 71

   26 paste: PASTE OB lisvar . CB

    CB  shift, and go to state 95


State 72

   39 exp: NOT . exp

    NOT   shift, and go to state 72
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r    go to state 73
    exp  go to state 96
    q    go to state 24


State 73

   38 exp: r . calc exp
   40    | r .

    OB     shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    DIV    shift, and go to state 100
    MUL    shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    COM    shift, and go to state 104
    NE     shift, and go to state 105
    LT     shift, and go to state 106
    GT     shift, and go to state 107
    NOT    shift, and go to state 108
    PERC   shift, and go to state 109
    BOOL   shift, and go to state 8
    NUM    shift, and go to state 11
    STR    shift, and go to state 12
    ID     shift, and go to state 38

    $default  reduce using rule 40 (exp)

    r        go to state 110
    q        go to state 24
    calc     go to state 111
    arithop  go to state 112
    relop    go to state 113
    logop    go to state 114
    l        go to state 115
    n        go to state 116
    o        go to state 117


State 74

   32 if: IF OB exp . CB OCB s CCB c

    CB  shift, and go to state 118


State 75

   36 func: IFELSE OB exp . COMMA r COMMA r CB
   37     | IFELSE OB exp . COMMA QUO r QUO COMMA QUO r QUO CB

    COMMA  shift, and go to state 119


State 76

   53 F: OB E CB .

    $default  reduce using rule 53 (F)


State 77

   76 li: LIST OB lisvar . CB

    CB  shift, and go to state 120


State 78

   82 vector: C OB lisvar . CB

    CB  shift, and go to state 121


State 79

   73 assignexp1: ID A1 i .

    $default  reduce using rule 73 (assignexp1)


State 80

   74 assignexp1: ID A2 i .

    $default  reduce using rule 74 (assignexp1)


State 81

   75 assignexp1: ID A3 i .

    $default  reduce using rule 75 (assignexp1)


State 82

   46 E: E PLUS T .
   49 T: T . MUL F
   50  | T . DIV F

    DIV  shift, and go to state 54
    MUL  shift, and go to state 55

    $default  reduce using rule 46 (E)


State 83

   47 E: E MINUS T .
   49 T: T . MUL F
   50  | T . DIV F

    DIV  shift, and go to state 54
    MUL  shift, and go to state 55

    $default  reduce using rule 47 (E)


State 84

   50 T: T DIV F .

    $default  reduce using rule 50 (T)


State 85

   49 T: T MUL F .

    $default  reduce using rule 49 (T)


State 86

   83 assignexp2: i A4 ID .

    $default  reduce using rule 83 (assignexp2)


State 87

   84 assignexp2: i A5 ID .

    $default  reduce using rule 84 (assignexp2)


State 88

    4 h: IMPORT W LIBRARY OB . QUO MATH QUO CB
    5  | IMPORT W LIBRARY OB . MATH CB

    MATH  shift, and go to state 122
    QUO   shift, and go to state 123


State 89

   15 print: PRINT OB QUO printvalue . QUO CB

    QUO  shift, and go to state 124


State 90

   21 seq: SEQ OB . NUM COMMA NUM extraopt CB

    NUM  shift, and go to state 125


State 91

   18 range: NUM CLN . NUM

    NUM  shift, and go to state 126


State 92

   14 print: PRINT OB printvalue CB .

    $default  reduce using rule 14 (print)


State 93

   27 paste: PASTE OB QUO lisvar . QUO CB

    QUO  shift, and go to state 127


State 94

   80 lisvar: r COMMA . lisvar

    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r       go to state 70
    q       go to state 24
    lisvar  go to state 128


State 95

   26 paste: PASTE OB lisvar CB .

    $default  reduce using rule 26 (paste)


State 96

   39 exp: NOT exp .

    $default  reduce using rule 39 (exp)


State 97

   71 o: OB . exp CB

    NOT   shift, and go to state 72
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r    go to state 73
    exp  go to state 129
    q    go to state 24


State 98

   54 arithop: PLUS .

    $default  reduce using rule 54 (arithop)


State 99

   55 arithop: MINUS .

    $default  reduce using rule 55 (arithop)


State 100

   57 arithop: DIV .

    $default  reduce using rule 57 (arithop)


State 101

   58 arithop: MUL .

    $default  reduce using rule 58 (arithop)


State 102

   62 relop: LE .

    $default  reduce using rule 62 (relop)


State 103

   63 relop: GE .

    $default  reduce using rule 63 (relop)


State 104

   61 relop: COM .

    $default  reduce using rule 61 (relop)


State 105

   64 relop: NE .

    $default  reduce using rule 64 (relop)


State 106

   59 relop: LT .

    $default  reduce using rule 59 (relop)


State 107

   60 relop: GT .

    $default  reduce using rule 60 (relop)


State 108

   69 n: NOT . o

    OB    shift, and go to state 97
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 110
    q  go to state 24
    o  go to state 130


State 109

   56 arithop: PERC .

    $default  reduce using rule 56 (arithop)


State 110

   72 o: r .

    $default  reduce using rule 72 (o)


State 111

   38 exp: r calc . exp

    NOT   shift, and go to state 72
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r    go to state 73
    exp  go to state 131
    q    go to state 24


State 112

   45 calc: arithop .

    $default  reduce using rule 45 (calc)


State 113

   43 calc: relop .

    $default  reduce using rule 43 (calc)


State 114

   44 calc: logop .

    $default  reduce using rule 44 (calc)


State 115

   65 logop: l . OR logop
   66      | l .

    OR  shift, and go to state 132

    $default  reduce using rule 66 (logop)


State 116

   67 l: n . AND l
   68  | n .

    AND  shift, and go to state 133

    $default  reduce using rule 68 (l)


State 117

   70 n: o .

    $default  reduce using rule 70 (n)


State 118

   32 if: IF OB exp CB . OCB s CCB c

    OCB  shift, and go to state 134


State 119

   36 func: IFELSE OB exp COMMA . r COMMA r CB
   37     | IFELSE OB exp COMMA . QUO r QUO COMMA QUO r QUO CB

    QUO   shift, and go to state 135
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 136
    q  go to state 24


State 120

   76 li: LIST OB lisvar CB .

    $default  reduce using rule 76 (li)


State 121

   82 vector: C OB lisvar CB .

    $default  reduce using rule 82 (vector)


State 122

    5 h: IMPORT W LIBRARY OB MATH . CB

    CB  shift, and go to state 137


State 123

    4 h: IMPORT W LIBRARY OB QUO . MATH QUO CB

    MATH  shift, and go to state 138


State 124

   15 print: PRINT OB QUO printvalue QUO . CB

    CB  shift, and go to state 139


State 125

   21 seq: SEQ OB NUM . COMMA NUM extraopt CB

    COMMA  shift, and go to state 140


State 126

   18 range: NUM CLN NUM .

    $default  reduce using rule 18 (range)


State 127

   27 paste: PASTE OB QUO lisvar QUO . CB

    CB  shift, and go to state 141


State 128

   80 lisvar: r COMMA lisvar .

    $default  reduce using rule 80 (lisvar)


State 129

   71 o: OB exp . CB

    CB  shift, and go to state 142


State 130

   69 n: NOT o .

    $default  reduce using rule 69 (n)


State 131

   38 exp: r calc exp .

    $default  reduce using rule 38 (exp)


State 132

   65 logop: l OR . logop

    OB    shift, and go to state 97
    NOT   shift, and go to state 108
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r      go to state 110
    q      go to state 24
    logop  go to state 143
    l      go to state 115
    n      go to state 116
    o      go to state 117


State 133

   67 l: n AND . l

    OB    shift, and go to state 97
    NOT   shift, and go to state 108
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 110
    q  go to state 24
    l  go to state 144
    n  go to state 116
    o  go to state 117


State 134

   32 if: IF OB exp CB OCB . s CCB c

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 145
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 135

   37 func: IFELSE OB exp COMMA QUO . r QUO COMMA QUO r QUO CB

    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 146
    q  go to state 24


State 136

   36 func: IFELSE OB exp COMMA r . COMMA r CB

    COMMA  shift, and go to state 147


State 137

    5 h: IMPORT W LIBRARY OB MATH CB .

    $default  reduce using rule 5 (h)


State 138

    4 h: IMPORT W LIBRARY OB QUO MATH . QUO CB

    QUO  shift, and go to state 148


State 139

   15 print: PRINT OB QUO printvalue QUO CB .

    $default  reduce using rule 15 (print)


State 140

   21 seq: SEQ OB NUM COMMA . NUM extraopt CB

    NUM  shift, and go to state 149


State 141

   27 paste: PASTE OB QUO lisvar QUO CB .

    $default  reduce using rule 27 (paste)


State 142

   71 o: OB exp CB .

    $default  reduce using rule 71 (o)


State 143

   65 logop: l OR logop .

    $default  reduce using rule 65 (logop)


State 144

   67 l: n AND l .

    $default  reduce using rule 67 (l)


State 145

   32 if: IF OB exp CB OCB s . CCB c

    CCB  shift, and go to state 150


State 146

   37 func: IFELSE OB exp COMMA QUO r . QUO COMMA QUO r QUO CB

    QUO  shift, and go to state 151


State 147

   36 func: IFELSE OB exp COMMA r COMMA . r CB

    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 152
    q  go to state 24


State 148

    4 h: IMPORT W LIBRARY OB QUO MATH QUO . CB

    CB  shift, and go to state 153


State 149

   21 seq: SEQ OB NUM COMMA NUM . extraopt CB

    COMMA  shift, and go to state 154

    $default  reduce using rule 23 (extraopt)

    extraopt  go to state 155
    extra     go to state 156


State 150

   32 if: IF OB exp CB OCB s CCB . c

    ELSE  shift, and go to state 157

    $default  reduce using rule 35 (c)

    c  go to state 158


State 151

   37 func: IFELSE OB exp COMMA QUO r QUO . COMMA QUO r QUO CB

    COMMA  shift, and go to state 159


State 152

   36 func: IFELSE OB exp COMMA r COMMA r . CB

    CB  shift, and go to state 160


State 153

    4 h: IMPORT W LIBRARY OB QUO MATH QUO CB .

    $default  reduce using rule 4 (h)


State 154

   24 extra: COMMA . BY A1 NUM
   25      | COMMA . LEN '.' OUT A1 NUM

    BY   shift, and go to state 161
    LEN  shift, and go to state 162


State 155

   21 seq: SEQ OB NUM COMMA NUM extraopt . CB

    CB  shift, and go to state 163


State 156

   22 extraopt: extra .

    $default  reduce using rule 22 (extraopt)


State 157

   33 c: ELSE . W IF OB exp CB OCB s CCB c
   34  | ELSE . OCB s CCB

    W    shift, and go to state 164
    OCB  shift, and go to state 165


State 158

   32 if: IF OB exp CB OCB s CCB c .

    $default  reduce using rule 32 (if)


State 159

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA . QUO r QUO CB

    QUO  shift, and go to state 166


State 160

   36 func: IFELSE OB exp COMMA r COMMA r CB .

    $default  reduce using rule 36 (func)


State 161

   24 extra: COMMA BY . A1 NUM

    A1  shift, and go to state 167


State 162

   25 extra: COMMA LEN . '.' OUT A1 NUM

    '.'  shift, and go to state 168


State 163

   21 seq: SEQ OB NUM COMMA NUM extraopt CB .

    $default  reduce using rule 21 (seq)


State 164

   33 c: ELSE W . IF OB exp CB OCB s CCB c

    IF  shift, and go to state 169


State 165

   34 c: ELSE OCB . s CCB

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 170
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 166

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO . r QUO CB

    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r  go to state 171
    q  go to state 24


State 167

   24 extra: COMMA BY A1 . NUM

    NUM  shift, and go to state 172


State 168

   25 extra: COMMA LEN '.' . OUT A1 NUM

    OUT  shift, and go to state 173


State 169

   33 c: ELSE W IF . OB exp CB OCB s CCB c

    OB  shift, and go to state 174


State 170

   34 c: ELSE OCB s . CCB

    CCB  shift, and go to state 175


State 171

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO r . QUO CB

    QUO  shift, and go to state 176


State 172

   24 extra: COMMA BY A1 NUM .

    $default  reduce using rule 24 (extra)


State 173

   25 extra: COMMA LEN '.' OUT . A1 NUM

    A1  shift, and go to state 177


State 174

   33 c: ELSE W IF OB . exp CB OCB s CCB c

    NOT   shift, and go to state 72
    BOOL  shift, and go to state 8
    NUM   shift, and go to state 11
    STR   shift, and go to state 12
    ID    shift, and go to state 38

    r    go to state 73
    exp  go to state 178
    q    go to state 24


State 175

   34 c: ELSE OCB s CCB .

    $default  reduce using rule 34 (c)


State 176

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO r QUO . CB

    CB  shift, and go to state 179


State 177

   25 extra: COMMA LEN '.' OUT A1 . NUM

    NUM  shift, and go to state 180


State 178

   33 c: ELSE W IF OB exp . CB OCB s CCB c

    CB  shift, and go to state 181


State 179

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO r QUO CB .

    $default  reduce using rule 37 (func)


State 180

   25 extra: COMMA LEN '.' OUT A1 NUM .

    $default  reduce using rule 25 (extra)


State 181

   33 c: ELSE W IF OB exp CB . OCB s CCB c

    OCB  shift, and go to state 182


State 182

   33 c: ELSE W IF OB exp CB OCB . s CCB c

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    OB      shift, and go to state 7
    BOOL    shift, and go to state 8
    LIST    shift, and go to state 9
    C       shift, and go to state 10
    NUM     shift, and go to state 11
    STR     shift, and go to state 12
    ID      shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 183
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    li          go to state 29
    i           go to state 30
    vector      go to state 31
    assignexp2  go to state 32


State 183

   33 c: ELSE W IF OB exp CB OCB s . CCB c

    CCB  shift, and go to state 184


State 184

   33 c: ELSE W IF OB exp CB OCB s CCB . c

    ELSE  shift, and go to state 157

    $default  reduce using rule 35 (c)

    c  go to state 185


State 185

   33 c: ELSE W IF OB exp CB OCB s CCB c .

    $default  reduce using rule 33 (c)
