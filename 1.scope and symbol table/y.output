Terminals unused in grammar

   OSB
   CSB
   POW
   INC
   DEC


Grammar

    0 $accept: problem $end

    1 problem: header
    2        | s

    3 header: h s

    4 h: IMPORT W LIBRARY OB QUO MATH QUO CB
    5  | IMPORT W LIBRARY OB MATH CB

    6 s: print s
    7  | paste s
    8  | if s
    9  | func s
   10  | assignexp1 s
   11  | assignexp2 s
   12  | break s
   13  | %empty

   14 print: PRINT OB printvalue CB
   15      | PRINT OB QUO printvalue QUO CB

   16 printvalue: r
   17           | range

   18 range: NUM CLN NUM
   19      | vector
   20      | seq

   21 seq: SEQ OB NUM COMMA NUM extraopt CB

   22 extraopt: extra
   23         | %empty

   24 extra: COMMA BY A1 NUM
   25      | COMMA LEN '.' OUT A1 NUM

   26 paste: PASTE OB lisvar CB
   27      | PASTE OB QUO lisvar QUO CB

   28 break: BRE

   29 r: STR
   30  | BOOL
   31  | q

   32 if: IF OB exp CB OCB s CCB c

   33 c: ELSE W IF OB exp CB OCB s CCB c
   34  | ELSE OCB s CCB
   35  | %empty

   36 func: IFELSE OB exp COMMA r COMMA r CB
   37     | IFELSE OB exp COMMA QUO r QUO COMMA QUO r QUO CB

   38 exp: r calc exp
   39    | NOT exp
   40    | r

   41 q: ID
   42  | NUM

   43 calc: relop
   44     | logop
   45     | arithop

   46 E: E PLUS T
   47  | E MINUS T
   48  | T

   49 T: T MUL F
   50  | T DIV F
   51  | F

   52 F: r
   53  | OB E CB

   54 arithop: PLUS
   55        | MINUS
   56        | PERC
   57        | DIV
   58        | MUL

   59 relop: LT
   60      | GT
   61      | COM
   62      | LE
   63      | GE
   64      | NE

   65 logop: l OR logop
   66      | l

   67 l: n AND l
   68  | n

   69 n: NOT o
   70  | o

   71 o: OB exp CB
   72  | r

   73 assignexp1: u A1 i
   74           | u A2 i
   75           | u A3 i

   76 u: STR
   77  | ID

   78 li: LIST OB lisvar CB

   79 i: E
   80  | li
   81  | vector

   82 lisvar: r COMMA lisvar
   83       | r

   84 vector: C OB lisvar CB

   85 assignexp2: i A4 u
   86           | i A5 u


Terminals, with rules where they appear

$end (0) 0
'.' (46) 25
error (256)
IMPORT (258) 4 5
LIBRARY (259) 4 5
MATH (260) 4 5
PRINT (261) 14 15
PASTE (262) 26 27
BRE (263) 28
ELSE (264) 33 34
IF (265) 32 33
IFELSE (266) 36 37
QUO (267) 4 15 27 37
W (268) 4 5 33
COMMA (269) 21 24 25 36 37 82
NUM (270) 18 21 24 25 42
STR (271) 29 76
ID (272) 41 77
A1 (273) 24 25 73
A2 (274) 74
A3 (275) 75
A4 (276) 85
A5 (277) 86
OB (278) 4 5 14 15 21 26 27 32 33 36 37 53 71 78 84
CB (279) 4 5 14 15 21 26 27 32 33 36 37 53 71 78 84
OCB (280) 32 33 34
CCB (281) 32 33 34
OSB (282)
CSB (283)
CLN (284) 18
PLUS (285) 46 54
MINUS (286) 47 55
DIV (287) 50 57
MUL (288) 49 58
POW (289)
LE (290) 62
GE (291) 63
COM (292) 61
NE (293) 64
LT (294) 59
GT (295) 60
AND (296) 67
OR (297) 65
NOT (298) 39 69
PERC (299) 56
BOOL (300) 30
INC (301)
DEC (302)
LIST (303) 78
SEQ (304) 21
BY (305) 24
LEN (306) 25
OUT (307) 25
C (308) 84


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
problem (56)
    on left: 1 2, on right: 0
header (57)
    on left: 3, on right: 1
h (58)
    on left: 4 5, on right: 3
s (59)
    on left: 6 7 8 9 10 11 12 13, on right: 2 3 6 7 8 9 10 11 12 32
    33 34
print (60)
    on left: 14 15, on right: 6
printvalue (61)
    on left: 16 17, on right: 14 15
range (62)
    on left: 18 19 20, on right: 17
seq (63)
    on left: 21, on right: 20
extraopt (64)
    on left: 22 23, on right: 21
extra (65)
    on left: 24 25, on right: 22
paste (66)
    on left: 26 27, on right: 7
break (67)
    on left: 28, on right: 12
r (68)
    on left: 29 30 31, on right: 16 36 37 38 40 52 72 82 83
if (69)
    on left: 32, on right: 8
c (70)
    on left: 33 34 35, on right: 32 33
func (71)
    on left: 36 37, on right: 9
exp (72)
    on left: 38 39 40, on right: 32 33 36 37 38 39 71
q (73)
    on left: 41 42, on right: 31
calc (74)
    on left: 43 44 45, on right: 38
E (75)
    on left: 46 47 48, on right: 46 47 53 79
T (76)
    on left: 49 50 51, on right: 46 47 48 49 50
F (77)
    on left: 52 53, on right: 49 50 51
arithop (78)
    on left: 54 55 56 57 58, on right: 45
relop (79)
    on left: 59 60 61 62 63 64, on right: 43
logop (80)
    on left: 65 66, on right: 44 65
l (81)
    on left: 67 68, on right: 65 66 67
n (82)
    on left: 69 70, on right: 67 68
o (83)
    on left: 71 72, on right: 69 70
assignexp1 (84)
    on left: 73 74 75, on right: 10
u (85)
    on left: 76 77, on right: 73 74 75 85 86
li (86)
    on left: 78, on right: 80
i (87)
    on left: 79 80 81, on right: 73 74 75 85 86
lisvar (88)
    on left: 82 83, on right: 26 27 78 82 84
vector (89)
    on left: 84, on right: 19 81
assignexp2 (90)
    on left: 85 86, on right: 11


State 0

    0 $accept: . problem $end

    IMPORT  shift, and go to state 1
    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    problem     go to state 14
    header      go to state 15
    h           go to state 16
    s           go to state 17
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 1

    4 h: IMPORT . W LIBRARY OB QUO MATH QUO CB
    5  | IMPORT . W LIBRARY OB MATH CB

    W  shift, and go to state 34


State 2

   14 print: PRINT . OB printvalue CB
   15      | PRINT . OB QUO printvalue QUO CB

    OB  shift, and go to state 35


State 3

   26 paste: PASTE . OB lisvar CB
   27      | PASTE . OB QUO lisvar QUO CB

    OB  shift, and go to state 36


State 4

   28 break: BRE .

    $default  reduce using rule 28 (break)


State 5

   32 if: IF . OB exp CB OCB s CCB c

    OB  shift, and go to state 37


State 6

   36 func: IFELSE . OB exp COMMA r COMMA r CB
   37     | IFELSE . OB exp COMMA QUO r QUO COMMA QUO r QUO CB

    OB  shift, and go to state 38


State 7

   42 q: NUM .

    $default  reduce using rule 42 (q)


State 8

   29 r: STR .
   76 u: STR .

    A1        reduce using rule 76 (u)
    A2        reduce using rule 76 (u)
    A3        reduce using rule 76 (u)
    $default  reduce using rule 29 (r)


State 9

   41 q: ID .
   77 u: ID .

    A1        reduce using rule 77 (u)
    A2        reduce using rule 77 (u)
    A3        reduce using rule 77 (u)
    $default  reduce using rule 41 (q)


State 10

   53 F: OB . E CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11

    r  go to state 21
    q  go to state 24
    E  go to state 41
    T  go to state 26
    F  go to state 27


State 11

   30 r: BOOL .

    $default  reduce using rule 30 (r)


State 12

   78 li: LIST . OB lisvar CB

    OB  shift, and go to state 42


State 13

   84 vector: C . OB lisvar CB

    OB  shift, and go to state 43


State 14

    0 $accept: problem . $end

    $end  shift, and go to state 44


State 15

    1 problem: header .

    $default  reduce using rule 1 (problem)


State 16

    3 header: h . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 45
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 17

    2 problem: s .

    $default  reduce using rule 2 (problem)


State 18

    6 s: print . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 46
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 19

    7 s: paste . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 47
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 20

   12 s: break . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 48
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 21

   52 F: r .

    $default  reduce using rule 52 (F)


State 22

    8 s: if . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 49
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 23

    9 s: func . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 50
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 24

   31 r: q .

    $default  reduce using rule 31 (r)


State 25

   46 E: E . PLUS T
   47  | E . MINUS T
   79 i: E .

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52

    $default  reduce using rule 79 (i)


State 26

   48 E: T .
   49 T: T . MUL F
   50  | T . DIV F

    DIV  shift, and go to state 53
    MUL  shift, and go to state 54

    $default  reduce using rule 48 (E)


State 27

   51 T: F .

    $default  reduce using rule 51 (T)


State 28

   10 s: assignexp1 . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 55
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 29

   73 assignexp1: u . A1 i
   74           | u . A2 i
   75           | u . A3 i

    A1  shift, and go to state 56
    A2  shift, and go to state 57
    A3  shift, and go to state 58


State 30

   80 i: li .

    $default  reduce using rule 80 (i)


State 31

   85 assignexp2: i . A4 u
   86           | i . A5 u

    A4  shift, and go to state 59
    A5  shift, and go to state 60


State 32

   81 i: vector .

    $default  reduce using rule 81 (i)


State 33

   11 s: assignexp2 . s

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 61
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 34

    4 h: IMPORT W . LIBRARY OB QUO MATH QUO CB
    5  | IMPORT W . LIBRARY OB MATH CB

    LIBRARY  shift, and go to state 62


State 35

   14 print: PRINT OB . printvalue CB
   15      | PRINT OB . QUO printvalue QUO CB

    QUO   shift, and go to state 63
    NUM   shift, and go to state 64
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11
    SEQ   shift, and go to state 65
    C     shift, and go to state 13

    printvalue  go to state 66
    range       go to state 67
    seq         go to state 68
    r           go to state 69
    q           go to state 24
    vector      go to state 70


State 36

   26 paste: PASTE OB . lisvar CB
   27      | PASTE OB . QUO lisvar QUO CB

    QUO   shift, and go to state 71
    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r       go to state 72
    q       go to state 24
    lisvar  go to state 73


State 37

   32 if: IF OB . exp CB OCB s CCB c

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    NOT   shift, and go to state 74
    BOOL  shift, and go to state 11

    r    go to state 75
    exp  go to state 76
    q    go to state 24


State 38

   36 func: IFELSE OB . exp COMMA r COMMA r CB
   37     | IFELSE OB . exp COMMA QUO r QUO COMMA QUO r QUO CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    NOT   shift, and go to state 74
    BOOL  shift, and go to state 11

    r    go to state 75
    exp  go to state 77
    q    go to state 24


State 39

   29 r: STR .

    $default  reduce using rule 29 (r)


State 40

   41 q: ID .

    $default  reduce using rule 41 (q)


State 41

   46 E: E . PLUS T
   47  | E . MINUS T
   53 F: OB E . CB

    CB     shift, and go to state 78
    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52


State 42

   78 li: LIST OB . lisvar CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r       go to state 72
    q       go to state 24
    lisvar  go to state 79


State 43

   84 vector: C OB . lisvar CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r       go to state 72
    q       go to state 24
    lisvar  go to state 80


State 44

    0 $accept: problem $end .

    $default  accept


State 45

    3 header: h s .

    $default  reduce using rule 3 (header)


State 46

    6 s: print s .

    $default  reduce using rule 6 (s)


State 47

    7 s: paste s .

    $default  reduce using rule 7 (s)


State 48

   12 s: break s .

    $default  reduce using rule 12 (s)


State 49

    8 s: if s .

    $default  reduce using rule 8 (s)


State 50

    9 s: func s .

    $default  reduce using rule 9 (s)


State 51

   46 E: E PLUS . T

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11

    r  go to state 21
    q  go to state 24
    T  go to state 81
    F  go to state 27


State 52

   47 E: E MINUS . T

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11

    r  go to state 21
    q  go to state 24
    T  go to state 82
    F  go to state 27


State 53

   50 T: T DIV . F

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11

    r  go to state 21
    q  go to state 24
    F  go to state 83


State 54

   49 T: T MUL . F

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11

    r  go to state 21
    q  go to state 24
    F  go to state 84


State 55

   10 s: assignexp1 s .

    $default  reduce using rule 10 (s)


State 56

   73 assignexp1: u A1 . i

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11
    LIST  shift, and go to state 12
    C     shift, and go to state 13

    r       go to state 21
    q       go to state 24
    E       go to state 25
    T       go to state 26
    F       go to state 27
    li      go to state 30
    i       go to state 85
    vector  go to state 32


State 57

   74 assignexp1: u A2 . i

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11
    LIST  shift, and go to state 12
    C     shift, and go to state 13

    r       go to state 21
    q       go to state 24
    E       go to state 25
    T       go to state 26
    F       go to state 27
    li      go to state 30
    i       go to state 86
    vector  go to state 32


State 58

   75 assignexp1: u A3 . i

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 10
    BOOL  shift, and go to state 11
    LIST  shift, and go to state 12
    C     shift, and go to state 13

    r       go to state 21
    q       go to state 24
    E       go to state 25
    T       go to state 26
    F       go to state 27
    li      go to state 30
    i       go to state 87
    vector  go to state 32


State 59

   85 assignexp2: i A4 . u

    STR  shift, and go to state 88
    ID   shift, and go to state 89

    u  go to state 90


State 60

   86 assignexp2: i A5 . u

    STR  shift, and go to state 88
    ID   shift, and go to state 89

    u  go to state 91


State 61

   11 s: assignexp2 s .

    $default  reduce using rule 11 (s)


State 62

    4 h: IMPORT W LIBRARY . OB QUO MATH QUO CB
    5  | IMPORT W LIBRARY . OB MATH CB

    OB  shift, and go to state 92


State 63

   15 print: PRINT OB QUO . printvalue QUO CB

    NUM   shift, and go to state 64
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11
    SEQ   shift, and go to state 65
    C     shift, and go to state 13

    printvalue  go to state 93
    range       go to state 67
    seq         go to state 68
    r           go to state 69
    q           go to state 24
    vector      go to state 70


State 64

   18 range: NUM . CLN NUM
   42 q: NUM .

    CLN  shift, and go to state 94

    $default  reduce using rule 42 (q)


State 65

   21 seq: SEQ . OB NUM COMMA NUM extraopt CB

    OB  shift, and go to state 95


State 66

   14 print: PRINT OB printvalue . CB

    CB  shift, and go to state 96


State 67

   17 printvalue: range .

    $default  reduce using rule 17 (printvalue)


State 68

   20 range: seq .

    $default  reduce using rule 20 (range)


State 69

   16 printvalue: r .

    $default  reduce using rule 16 (printvalue)


State 70

   19 range: vector .

    $default  reduce using rule 19 (range)


State 71

   27 paste: PASTE OB QUO . lisvar QUO CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r       go to state 72
    q       go to state 24
    lisvar  go to state 97


State 72

   82 lisvar: r . COMMA lisvar
   83       | r .

    COMMA  shift, and go to state 98

    $default  reduce using rule 83 (lisvar)


State 73

   26 paste: PASTE OB lisvar . CB

    CB  shift, and go to state 99


State 74

   39 exp: NOT . exp

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    NOT   shift, and go to state 74
    BOOL  shift, and go to state 11

    r    go to state 75
    exp  go to state 100
    q    go to state 24


State 75

   38 exp: r . calc exp
   40    | r .

    NUM    shift, and go to state 7
    STR    shift, and go to state 39
    ID     shift, and go to state 40
    OB     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    DIV    shift, and go to state 104
    MUL    shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    COM    shift, and go to state 108
    NE     shift, and go to state 109
    LT     shift, and go to state 110
    GT     shift, and go to state 111
    NOT    shift, and go to state 112
    PERC   shift, and go to state 113
    BOOL   shift, and go to state 11

    $default  reduce using rule 40 (exp)

    r        go to state 114
    q        go to state 24
    calc     go to state 115
    arithop  go to state 116
    relop    go to state 117
    logop    go to state 118
    l        go to state 119
    n        go to state 120
    o        go to state 121


State 76

   32 if: IF OB exp . CB OCB s CCB c

    CB  shift, and go to state 122


State 77

   36 func: IFELSE OB exp . COMMA r COMMA r CB
   37     | IFELSE OB exp . COMMA QUO r QUO COMMA QUO r QUO CB

    COMMA  shift, and go to state 123


State 78

   53 F: OB E CB .

    $default  reduce using rule 53 (F)


State 79

   78 li: LIST OB lisvar . CB

    CB  shift, and go to state 124


State 80

   84 vector: C OB lisvar . CB

    CB  shift, and go to state 125


State 81

   46 E: E PLUS T .
   49 T: T . MUL F
   50  | T . DIV F

    DIV  shift, and go to state 53
    MUL  shift, and go to state 54

    $default  reduce using rule 46 (E)


State 82

   47 E: E MINUS T .
   49 T: T . MUL F
   50  | T . DIV F

    DIV  shift, and go to state 53
    MUL  shift, and go to state 54

    $default  reduce using rule 47 (E)


State 83

   50 T: T DIV F .

    $default  reduce using rule 50 (T)


State 84

   49 T: T MUL F .

    $default  reduce using rule 49 (T)


State 85

   73 assignexp1: u A1 i .

    $default  reduce using rule 73 (assignexp1)


State 86

   74 assignexp1: u A2 i .

    $default  reduce using rule 74 (assignexp1)


State 87

   75 assignexp1: u A3 i .

    $default  reduce using rule 75 (assignexp1)


State 88

   76 u: STR .

    $default  reduce using rule 76 (u)


State 89

   77 u: ID .

    $default  reduce using rule 77 (u)


State 90

   85 assignexp2: i A4 u .

    $default  reduce using rule 85 (assignexp2)


State 91

   86 assignexp2: i A5 u .

    $default  reduce using rule 86 (assignexp2)


State 92

    4 h: IMPORT W LIBRARY OB . QUO MATH QUO CB
    5  | IMPORT W LIBRARY OB . MATH CB

    MATH  shift, and go to state 126
    QUO   shift, and go to state 127


State 93

   15 print: PRINT OB QUO printvalue . QUO CB

    QUO  shift, and go to state 128


State 94

   18 range: NUM CLN . NUM

    NUM  shift, and go to state 129


State 95

   21 seq: SEQ OB . NUM COMMA NUM extraopt CB

    NUM  shift, and go to state 130


State 96

   14 print: PRINT OB printvalue CB .

    $default  reduce using rule 14 (print)


State 97

   27 paste: PASTE OB QUO lisvar . QUO CB

    QUO  shift, and go to state 131


State 98

   82 lisvar: r COMMA . lisvar

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r       go to state 72
    q       go to state 24
    lisvar  go to state 132


State 99

   26 paste: PASTE OB lisvar CB .

    $default  reduce using rule 26 (paste)


State 100

   39 exp: NOT exp .

    $default  reduce using rule 39 (exp)


State 101

   71 o: OB . exp CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    NOT   shift, and go to state 74
    BOOL  shift, and go to state 11

    r    go to state 75
    exp  go to state 133
    q    go to state 24


State 102

   54 arithop: PLUS .

    $default  reduce using rule 54 (arithop)


State 103

   55 arithop: MINUS .

    $default  reduce using rule 55 (arithop)


State 104

   57 arithop: DIV .

    $default  reduce using rule 57 (arithop)


State 105

   58 arithop: MUL .

    $default  reduce using rule 58 (arithop)


State 106

   62 relop: LE .

    $default  reduce using rule 62 (relop)


State 107

   63 relop: GE .

    $default  reduce using rule 63 (relop)


State 108

   61 relop: COM .

    $default  reduce using rule 61 (relop)


State 109

   64 relop: NE .

    $default  reduce using rule 64 (relop)


State 110

   59 relop: LT .

    $default  reduce using rule 59 (relop)


State 111

   60 relop: GT .

    $default  reduce using rule 60 (relop)


State 112

   69 n: NOT . o

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 101
    BOOL  shift, and go to state 11

    r  go to state 114
    q  go to state 24
    o  go to state 134


State 113

   56 arithop: PERC .

    $default  reduce using rule 56 (arithop)


State 114

   72 o: r .

    $default  reduce using rule 72 (o)


State 115

   38 exp: r calc . exp

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    NOT   shift, and go to state 74
    BOOL  shift, and go to state 11

    r    go to state 75
    exp  go to state 135
    q    go to state 24


State 116

   45 calc: arithop .

    $default  reduce using rule 45 (calc)


State 117

   43 calc: relop .

    $default  reduce using rule 43 (calc)


State 118

   44 calc: logop .

    $default  reduce using rule 44 (calc)


State 119

   65 logop: l . OR logop
   66      | l .

    OR  shift, and go to state 136

    $default  reduce using rule 66 (logop)


State 120

   67 l: n . AND l
   68  | n .

    AND  shift, and go to state 137

    $default  reduce using rule 68 (l)


State 121

   70 n: o .

    $default  reduce using rule 70 (n)


State 122

   32 if: IF OB exp CB . OCB s CCB c

    OCB  shift, and go to state 138


State 123

   36 func: IFELSE OB exp COMMA . r COMMA r CB
   37     | IFELSE OB exp COMMA . QUO r QUO COMMA QUO r QUO CB

    QUO   shift, and go to state 139
    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r  go to state 140
    q  go to state 24


State 124

   78 li: LIST OB lisvar CB .

    $default  reduce using rule 78 (li)


State 125

   84 vector: C OB lisvar CB .

    $default  reduce using rule 84 (vector)


State 126

    5 h: IMPORT W LIBRARY OB MATH . CB

    CB  shift, and go to state 141


State 127

    4 h: IMPORT W LIBRARY OB QUO . MATH QUO CB

    MATH  shift, and go to state 142


State 128

   15 print: PRINT OB QUO printvalue QUO . CB

    CB  shift, and go to state 143


State 129

   18 range: NUM CLN NUM .

    $default  reduce using rule 18 (range)


State 130

   21 seq: SEQ OB NUM . COMMA NUM extraopt CB

    COMMA  shift, and go to state 144


State 131

   27 paste: PASTE OB QUO lisvar QUO . CB

    CB  shift, and go to state 145


State 132

   82 lisvar: r COMMA lisvar .

    $default  reduce using rule 82 (lisvar)


State 133

   71 o: OB exp . CB

    CB  shift, and go to state 146


State 134

   69 n: NOT o .

    $default  reduce using rule 69 (n)


State 135

   38 exp: r calc exp .

    $default  reduce using rule 38 (exp)


State 136

   65 logop: l OR . logop

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 101
    NOT   shift, and go to state 112
    BOOL  shift, and go to state 11

    r      go to state 114
    q      go to state 24
    logop  go to state 147
    l      go to state 119
    n      go to state 120
    o      go to state 121


State 137

   67 l: n AND . l

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    OB    shift, and go to state 101
    NOT   shift, and go to state 112
    BOOL  shift, and go to state 11

    r  go to state 114
    q  go to state 24
    l  go to state 148
    n  go to state 120
    o  go to state 121


State 138

   32 if: IF OB exp CB OCB . s CCB c

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 149
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 139

   37 func: IFELSE OB exp COMMA QUO . r QUO COMMA QUO r QUO CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r  go to state 150
    q  go to state 24


State 140

   36 func: IFELSE OB exp COMMA r . COMMA r CB

    COMMA  shift, and go to state 151


State 141

    5 h: IMPORT W LIBRARY OB MATH CB .

    $default  reduce using rule 5 (h)


State 142

    4 h: IMPORT W LIBRARY OB QUO MATH . QUO CB

    QUO  shift, and go to state 152


State 143

   15 print: PRINT OB QUO printvalue QUO CB .

    $default  reduce using rule 15 (print)


State 144

   21 seq: SEQ OB NUM COMMA . NUM extraopt CB

    NUM  shift, and go to state 153


State 145

   27 paste: PASTE OB QUO lisvar QUO CB .

    $default  reduce using rule 27 (paste)


State 146

   71 o: OB exp CB .

    $default  reduce using rule 71 (o)


State 147

   65 logop: l OR logop .

    $default  reduce using rule 65 (logop)


State 148

   67 l: n AND l .

    $default  reduce using rule 67 (l)


State 149

   32 if: IF OB exp CB OCB s . CCB c

    CCB  shift, and go to state 154


State 150

   37 func: IFELSE OB exp COMMA QUO r . QUO COMMA QUO r QUO CB

    QUO  shift, and go to state 155


State 151

   36 func: IFELSE OB exp COMMA r COMMA . r CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r  go to state 156
    q  go to state 24


State 152

    4 h: IMPORT W LIBRARY OB QUO MATH QUO . CB

    CB  shift, and go to state 157


State 153

   21 seq: SEQ OB NUM COMMA NUM . extraopt CB

    COMMA  shift, and go to state 158

    $default  reduce using rule 23 (extraopt)

    extraopt  go to state 159
    extra     go to state 160


State 154

   32 if: IF OB exp CB OCB s CCB . c

    ELSE  shift, and go to state 161

    $default  reduce using rule 35 (c)

    c  go to state 162


State 155

   37 func: IFELSE OB exp COMMA QUO r QUO . COMMA QUO r QUO CB

    COMMA  shift, and go to state 163


State 156

   36 func: IFELSE OB exp COMMA r COMMA r . CB

    CB  shift, and go to state 164


State 157

    4 h: IMPORT W LIBRARY OB QUO MATH QUO CB .

    $default  reduce using rule 4 (h)


State 158

   24 extra: COMMA . BY A1 NUM
   25      | COMMA . LEN '.' OUT A1 NUM

    BY   shift, and go to state 165
    LEN  shift, and go to state 166


State 159

   21 seq: SEQ OB NUM COMMA NUM extraopt . CB

    CB  shift, and go to state 167


State 160

   22 extraopt: extra .

    $default  reduce using rule 22 (extraopt)


State 161

   33 c: ELSE . W IF OB exp CB OCB s CCB c
   34  | ELSE . OCB s CCB

    W    shift, and go to state 168
    OCB  shift, and go to state 169


State 162

   32 if: IF OB exp CB OCB s CCB c .

    $default  reduce using rule 32 (if)


State 163

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA . QUO r QUO CB

    QUO  shift, and go to state 170


State 164

   36 func: IFELSE OB exp COMMA r COMMA r CB .

    $default  reduce using rule 36 (func)


State 165

   24 extra: COMMA BY . A1 NUM

    A1  shift, and go to state 171


State 166

   25 extra: COMMA LEN . '.' OUT A1 NUM

    '.'  shift, and go to state 172


State 167

   21 seq: SEQ OB NUM COMMA NUM extraopt CB .

    $default  reduce using rule 21 (seq)


State 168

   33 c: ELSE W . IF OB exp CB OCB s CCB c

    IF  shift, and go to state 173


State 169

   34 c: ELSE OCB . s CCB

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 174
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 170

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO . r QUO CB

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    BOOL  shift, and go to state 11

    r  go to state 175
    q  go to state 24


State 171

   24 extra: COMMA BY A1 . NUM

    NUM  shift, and go to state 176


State 172

   25 extra: COMMA LEN '.' . OUT A1 NUM

    OUT  shift, and go to state 177


State 173

   33 c: ELSE W IF . OB exp CB OCB s CCB c

    OB  shift, and go to state 178


State 174

   34 c: ELSE OCB s . CCB

    CCB  shift, and go to state 179


State 175

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO r . QUO CB

    QUO  shift, and go to state 180


State 176

   24 extra: COMMA BY A1 NUM .

    $default  reduce using rule 24 (extra)


State 177

   25 extra: COMMA LEN '.' OUT . A1 NUM

    A1  shift, and go to state 181


State 178

   33 c: ELSE W IF OB . exp CB OCB s CCB c

    NUM   shift, and go to state 7
    STR   shift, and go to state 39
    ID    shift, and go to state 40
    NOT   shift, and go to state 74
    BOOL  shift, and go to state 11

    r    go to state 75
    exp  go to state 182
    q    go to state 24


State 179

   34 c: ELSE OCB s CCB .

    $default  reduce using rule 34 (c)


State 180

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO r QUO . CB

    CB  shift, and go to state 183


State 181

   25 extra: COMMA LEN '.' OUT A1 . NUM

    NUM  shift, and go to state 184


State 182

   33 c: ELSE W IF OB exp . CB OCB s CCB c

    CB  shift, and go to state 185


State 183

   37 func: IFELSE OB exp COMMA QUO r QUO COMMA QUO r QUO CB .

    $default  reduce using rule 37 (func)


State 184

   25 extra: COMMA LEN '.' OUT A1 NUM .

    $default  reduce using rule 25 (extra)


State 185

   33 c: ELSE W IF OB exp CB . OCB s CCB c

    OCB  shift, and go to state 186


State 186

   33 c: ELSE W IF OB exp CB OCB . s CCB c

    PRINT   shift, and go to state 2
    PASTE   shift, and go to state 3
    BRE     shift, and go to state 4
    IF      shift, and go to state 5
    IFELSE  shift, and go to state 6
    NUM     shift, and go to state 7
    STR     shift, and go to state 8
    ID      shift, and go to state 9
    OB      shift, and go to state 10
    BOOL    shift, and go to state 11
    LIST    shift, and go to state 12
    C       shift, and go to state 13

    $default  reduce using rule 13 (s)

    s           go to state 187
    print       go to state 18
    paste       go to state 19
    break       go to state 20
    r           go to state 21
    if          go to state 22
    func        go to state 23
    q           go to state 24
    E           go to state 25
    T           go to state 26
    F           go to state 27
    assignexp1  go to state 28
    u           go to state 29
    li          go to state 30
    i           go to state 31
    vector      go to state 32
    assignexp2  go to state 33


State 187

   33 c: ELSE W IF OB exp CB OCB s . CCB c

    CCB  shift, and go to state 188


State 188

   33 c: ELSE W IF OB exp CB OCB s CCB . c

    ELSE  shift, and go to state 161

    $default  reduce using rule 35 (c)

    c  go to state 189


State 189

   33 c: ELSE W IF OB exp CB OCB s CCB c .

    $default  reduce using rule 33 (c)
